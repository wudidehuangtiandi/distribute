<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context.xsd
http://www.springframework.org/schema/aop
http://www.springframework.org/schema/aop/spring-aop.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx.xsd http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd">
    <context:property-placeholder location="classpath:jdbcConfig.properties"></context:property-placeholder>

    <!--导入TCC初始化配置-->
    <import resource="classpath:tcc-transaction.xml"></import>
    <import resource="classpath:tcc-transaction-dubbo.xml"></import>



    <context:component-scan base-package="com">
        <!--哪个注解不扫描-->
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"></context:exclude-filter>
    </context:component-scan>

    <!--整合mybatis，整合了就不用原来mybatis的核心配置了 第一步搞一个数据源-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driver}"></property>
        <property name="jdbcUrl" value="${jdbc.url}"></property>
        <property name="user" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>
    <!--第二步通过数据源获得 sqlsessionfactory工厂-->
    <bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>

        <!--也和hibernate一样有这属性-->
<!--
        <property name="configurationProperties" >
            <props>
                <prop key=""
            </props>
        </property>
-->
    </bean>

    <!--第三步获取接口所在包（扫描接口）-->
    <bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.dao"></property>
    </bean>

    <!--事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!--事务控制-->
    <tx:annotation-driven></tx:annotation-driven>



    <!--dubbo配置,从注册中心获取接口生成代理类-->
    <dubbo:application name="diaoyong"></dubbo:application>

    <dubbo:registry address="zookeeper://127.0.0.1:2181"></dubbo:registry>

    <!--声明调用接口：形成代理类-->
    <dubbo:reference interface="com.service.PayService" id="payService"></dubbo:reference>

    <!--消费者链接监控中心-->
    <dubbo:monitor protocol="registry"></dubbo:monitor><!--自动发现-->


</beans>